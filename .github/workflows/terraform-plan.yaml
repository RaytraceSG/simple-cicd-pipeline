name: Terraform Plan
run-name: Running Terraform Plan by ${{ github.actor }}

on:
  pull_request:
    branches:
      - "*"
    paths:
      - "terraform/*"

jobs:
  Terraform-Plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform workspace list
        run: terraform workspace list

      - name: Terraform workspace new environment and select
        env:
          WORKSPACE_NAME: ${{ github.base_ref == 'prod' && 'prod' || (github.base_ref == 'uat' && 'uat' || 'dev') }}
        run: |
          terraform workspace select $WORKSPACE_NAME || terraform workspace new $WORKSPACE_NAME
          terraform workspace list

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="${{ github.base_ref == 'prod' && 'prod.tfvars' || (github.base_ref == 'uat' && 'uat.tfvars' || 'dev.tfvars') }}"

      - name: Update Pull Request
        if: always()
        uses: actions/github-script@v7
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
