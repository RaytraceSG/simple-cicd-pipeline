name: Terraform Checks
run-name: Running Terraform Checks by ${{ github.actor }}

on:
  pull_request:
    branches:
      - "*"
    paths:
      - "terraform/*"

jobs:
  Terraform-Checks:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt check
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        id: lint
        run: tflint -f compact > lint_output.txt
          cat lint_output.txt

      - name: Set output
        id: set-output
        run: echo "::set-output name=lint-results::$(cat lint_output.txt)"

      - name: Update Pull Request
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖${{ steps.validate.outputs.stdout }}
            #### Terraform Lint 🧹${{ steps.set-output.outputs.lint-results }}

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
